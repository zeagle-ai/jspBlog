@model jspBlog.Models.BlogPost

@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm("Edit", "BlogPosts", FormMethod.Post, new{ enctype = "Multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    <div class="container">
        <h2>Edit</h2>
        <div class="form-horizontal">
            <h4>BlogPost</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control", id = "editor" } })
                    @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h4>Upload an image to attach to your post.</h4>
                <div class="col-md-10">
                    <input name ="image" type="file" class="form-control" id="fileUpload" />
                    @Html.ValidationMessageFor(model => model.MediaURL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Published)
                        @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-rose" />
                    @Html.ActionLink("Blogs", "Index", null, new { @class = "btn btn-rose" })
                </div>
            </div>
        </div>
    </div>
}

<script src="~/Scripts/tinymce/tinymce.min.js"></script>
<script>tinymce.init({ selector: '#editor' });</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
